# The AWS::Serverless transform, which is a macro hosted by AWS CloudFormation, takes an entire template written in the AWS Serverless Application Model (AWS SAM) syntax and transforms and expands it into a compliant AWS CloudFormation template.
# https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md
Transform: AWS::Serverless-2016-10-31

# Globals is a section in your SAM template to define properties common to all your Serverless Function and APIs. All the AWS::Serverless::Function and AWS::Serverless::Api resources will inherit the properties defined here.
Globals:
  Function:
    Runtime: nodejs8.10
    Handler: index.default # export handler function as default from index.js file
    Timeout: 10
    Environment:
      Variables:
        DailyQuotesTable: !Ref DailyQuotesTable
    # user default here?

# The required Resources section declares the AWS resources that you want to include in the stack, such as an Amazon EC2 instance or an Amazon S3 bucket.
Resources:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
  StockEyeApi:
    Type: AWS::Serverless::Api
    Properties:
      # SAM also creates a Stage with 'Stage' automatically and it maybe a bug of SAM.
      # https://github.com/awslabs/serverless-application-model/issues/191
      StageName: prod
      EndpointConfiguration: REGIONAL
      # It would be `DefinitionUri: swagger.yaml`, and SAM will upload the file to s3 with `sam package` command. But
      # Swagger templates don't get transformed when using DefinitionUri. Using DefinitionBody is a work around raised
      # from https://github.com/awslabs/serverless-application-model/issues/305#issuecomment-375297669
      DefinitionBody:
        Fn::Transform:
            Name: AWS::Include
            Parameters:
              Location: swagger.yaml

  FetchCurrentQuotesFunction: # Use the logical name to reference the resource in other parts of the template.
    # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Type: AWS::Serverless::Function
    Properties:
      # CodeUri only supports either a zip/jar file or a folder, and the compressed file needs to contain a folder in it
      CodeUri: .aws-sam/build/fetchCurrentQuotes
      # Layers:
      #   - !Ref ApiDependencies
      Events:
        Get: # API name
          # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Type: Api
          Properties:
            # RestApiId is optional. If not defined, a default AWS::Serverless::Api resource is created using a
            # generated Swagger document contains a union of all paths and methods defined by Api events defined in this
            # template that do not specify a RestApiId. When defined, the API resource must contain an operation with
            # the given path and method.
            RestApiId: !Ref StockEyeApi
            Path: /current_quotes
            Method: get

  FetchHistoryQuotesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .aws-sam/build/fetchHistoryQuotes
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref StockEyeApi
            Path: /history_quotes
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DailyQuotesTable

  DailyQuotesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: day
          AttributeType: S
        -
          AttributeName: stockCode
          AttributeType: S
      KeySchema:
        -
          AttributeName: stockCode
          KeyType: HASH
        -
          AttributeName: day
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  # ApiDependencies:
  #   Type: AWS::Serverless::LayerVersion
  #   Properties:
  #     Description: Dependencies for API
  #     ContentUri: .aws-sam/build/vendors
  #     RetentionPolicy: Delete
